Figure 1: Given a reference style image (a) And an input image (b), We seek to create an output image of the same scene as the input, but with the style of the reference image. The neural style algorithm [5] (c) Successfully transfers colors, but also introduces distortions that make the output look like a painting, which is undesirable in the context of photo style transfer. In comparison, our result (d) Transfers the color of the reference style image equally well while preserving the photorealism of the output. On the right (e), We show 3 insets of (b), (c), and (d) (in that order). Zoom in to compare results. 


SECTION 1. Introduction: Photographic style transfer is a long-standing problem that seeks to transfer the style of a reference style photo onto another input picture. For instance, by appropriately choosing the reference style photo, one can make the input picture look like it has been taken under a different illumination, time of day, or weather, or that it has been artistically retouched with a different intent. So far, existing techniques are either limited in the diversity of scenes or transfers that they can handle or in the faithfulness of the stylistic match they achieve. In this paper, we introduce a deep-learning approach to photographic style transfer that is at the same time broad and faithful, i.e., it handles a large variety of image content while accurately transferring the reference style. Our approach builds upon the recent work on Neural Style transfer by Gatys et al. [5]. However, as shown in Figure 1, even when the input and reference style images are photographs, the output still looks like a painting, e.g., straight edges become wiggly and regular textures wavy. One of our contributions is to remove these painting-like effects by preventing spatial distortion and constraining the transfer operation to happen only in color space. We achieve this goal with a transformation model that is locally affine in colorspace, which we express as a custom fully differentiable energy term inspired by the Matting Laplacian [9]. We show that this approach successfully suppresses distortion while having a minimal impact on the transfer faithfulness. Our other key contribution is a solution to the challenge posed by the difference in content between the input and reference images, which could result in undesirable transfers between unrelated content. For example, consider an image with less sky visible in the input image; a transfer that ignores the difference in context between style and input may cause the style of the sky to “spill over” the rest of the picture. We show how to address this issue using semantic segmentation [3] of the input and reference images. We demonstrate the effectiveness of our approach with satisfying photorealistic style transfers for a broad variety of scenarios including transfer of the time of day, weather, season, and artistic edits. 1.1. Challenges and Contributions: From a practical perspective, our contribution is an effective algorithm for photographic style transfer suitable for many applications such as altering the time of day or weather of a picture, or transferring artistic edits from a photo to another. To achieve this result, we had to address two fundamental challenges. Structure PreservationThere is an inherent tension in our objectives. On the one hand, we aim to achieve very local drastic effects, e.g., to turn on the lights on individual skyscraper windows (Fig. 1). On the other hand, these effects should not distort edges and regular patterns, e.g., so that the windows remain aligned on a grid. Formally, we seek a transformation that can strongly affect image colors while having no geometric effect, i.e., nothing moves or distorts. Reinhard et al. [12] originally addressed this challenge with a global color transform. However, by definition, such a transform cannot model spatially varying effects and thus is limited in its ability to match the desired style. More expressivity requires spatially varying effects, further adding to the challenge of preventing spatial distortion. A few techniques exist for specific scenarios [8], [15] but the general case remains unaddressed. Our work directly takes on this challenge and provides a first solution to restricting the solution space to photorealistic images, thereby touching on the fundamental task of differentiating photos from paintings. Semantic Accuracy and Transfer FaithfulnessThe complexity of real-world scenes raises another challenge: the transfer should respect the semantics of the scene. For instance, in a cityscape, the appearance of buildings should be matched to buildings, and sky to sky; it is not acceptable to make the sky look like a building. One plausible approach is to match each input neural patch with the most similar patch in the style image to minimize the chances of an inaccurate transfer. This strategy is essentially the one employed by the CNNMRF method [10]. While plausible, we find that it often leads to results where many input patches get paired with the same style patch, and/or that entire regions of the style image are ignored, which generates outputs that poorly match the desired style. One solution to this problem is to transfer the complete “style distribution” of the reference style photo as captured by the Gram matrix of the neural responses [5]. This approach successfully prevents any region from being ignored. However, there may be some scene elements more (or less) represented in the input than in the reference image. In such cases, the style of the large elements in the reference style image “spills over” into mismatching elements of the input image, generating artifacts like building texture in the sky. A contribution of our work is to incorporate a semantic labeling of the input and style images into the transfer procedure so that the transfer happens between semantically equivalent subregions and within each of them, the mapping is close to uniform. As we shall see, this algorithm preserves the richness of the desired style and prevents spillovers. These issues are demonstrated in Figure 2. 1.2. Related Work: Global style transfer algorithms process an image by applying a spatially-invariant transfer function. These methods are effective and can handle simple styles like global color shifts (e.g., sepia) and tone curves (e.g., high or low contrast). For instance, Reinhard et al. [12] match the means and standard deviations between the input and reference style image after converting them into a decorrelated color space. Pitié et al. [11] describe an algorithm to transfer the full 3D color histogram using a series of 1D histograms. As we shall see in the result section, these methods are limited in their ability to match sophisticated styles. Local style transfer algorithms based on spatial color mappings are more expressive and can handle a broad class of applications such as time-of-day hallucination [4], [15], transfer of artistic edits [1], [14], [17], weather and season change [4], [8], and painterly stylization [5], [6], [10], [13]. Our work is most directly related to the line of work initiated by Gatys et al. [5] that employs the feature maps of discriminatively trained deep convolutional neural networks such as VGG-19 [16] to achieve groundbreaking performance for painterly style transfer [10], [13]. The main difference with these techniques is that our work aims for photorealistic transfer, which, as we previously discussed, introduces a challenging tension between local changes and large-scale consistency. In that respect, our algorithm is related to the techniques that operate in the photo realm [1], [4], [8], [14], [15], [17]. But unlike these techniques that are dedicated to a specific scenario, our approach is generic and can handle a broader diversity of style images.
Figure 2: Given an input image (a) And a reference style image (e), the results (b) Of Gatys et al. [5] (neural style) and (c) Of Li et al. [10] (CNNMRF) present artifacts due to strong distortions when compared to (d) our result. In (f,g,h), we compute the correspondence between the output and the reference style where, for each pixel, we encode the XY coordinates of the nearest patch in the reference style image as a color with (R, G, B)=(0,255×Y /height, 255×X/ width). The nearest neural patch is found using the l2 norm on the neural responses of the VGG-19 conv3_1 layer, similarly to CNNMRF. Neural style computes global statistics of the reference style image which tends to produce texture mismatches as shown in the correspondence (f), e.g., parts of the sky in the output image map to the buildings from the reference style image. CNNMRF computes a nearest-neighbor search of the reference style image which tends to have many-to-one mappings as shown in the correspondence (g), e.g., see the buildings. In comparison, our result (d) prevents distortions and matches the texture correctly as shown in the correspondence (h). 


SECTION 2. Method: Our algorithm takes two images: an input image which is usually an ordinary photograph and a stylized and retouched reference image, the reference style image. We seek to transfer the style of the reference to the input while keeping the result photorealistic. Our approach augments the Neural Style algorithm [5] by introducing two core ideas.
We propose a photorealism regularization term in the objective function during the optimization, constraining the reconstructed image to be represented by locally affine color transformations of the input to prevent distortions. We introduce an optional guidance to the style transfer process based on semantic segmentation of the inputs (similar to [2]) to avoid the content-mismatch problem, which greatly improves the photorealism of the results.  Background: For completeness, we summarize the Neural Style algorithm by Gatys et al. [5] that transfers the reference style image S onto the input image I to produce an output image O by minimizing the objective function:
with:Ltotaι=∑ℓ=1LαℓLℓc+Γ∑ℓ=1LβℓLℓs Lℓc=12NℓDℓ∑ij(Fℓ[O]−Fℓ[I])2ij Lℓs=12N2ℓ∑ij(Gℓ[O]−Gℓ[S])2ij(1a)(1b)(1c)View Source\begin{align*}
&\mathcal{L}_{\mathrm{t}\mathrm{o}\mathrm{t}\mathrm{a}}\iota=\sum_{\ell=1}^{L}\alpha\ell \mathcal{L}_{c}^{\ell}+\Gamma\sum_{\ell=1}^{L}\beta_{\ell}\mathcal{L}_{s}^{\ell}\tag{1a}\\
\text{with}:&\ \mathcal{L}_{c}^{\ell}=\frac{1}{2N_{\ell}D_{\ell}}\sum_{ij}(F_{\ell}[O]-F_{\ell}[I])_{ij}^{2}\tag{1b}\\
&\ \mathcal{L}_{s}^{\ell}=\frac{1}{2N_{\ell}^{2}}\sum_{ij}(G_{\ell}[O]-G_{\ell}[S])_{ij}^{2}\tag{1c}
\end{align*}
where L is the total number of convolutional layers and ℓ indicates the ℓ-th convolutional layer of the deep convolutional neural network. In each layer, there are Nℓ filters each with a vectorized feature map of size Dℓ. Fl[⋅]∈RNℓ×Dℓ is the feature matrix with (i,j) indicating its index and the Gram matrix Gℓ[⋅]=Fl[⋅]Fℓ[⋅]T∈RNℓ×Nℓ is defined as the inner product between the vectorized feature maps. αℓ and βℓ are the weights to configure layer preferences and Γ is a weight that balances the tradeoff between the content (Eq. 1b) and the style (Eq. 1c). Photorealism Regularization: We now describe how we regularize this optimization scheme to preserve the structure of the input image and produce photorealistic outputs. Our strategy is to express this constraint not on the output image directly but on the transformation that is applied to the input image. Characterizing the space of photorealistic images is an unsolved problem. Our insight is that we do not need to solve it if we exploit the fact that the input is already photorealistic. Our strategy is to ensure that we do not lose this property during the transfer by adding a term to Equation 1a that penalizes image distortions. Our solution is to seek an image transform that is locally affine in color space, that is, a function such that for each output patch, there is an affine function that maps the input RGB values onto their output counterparts. Each patch can have a different affine function, which allows for spatial variations. To gain some intuition, one can consider an edge patch. The set of affine combinations of the RGB channels spans a broad set of variations but the edge itself cannot move because it is located at the same place in all channels. Formally, we build upon the Matting Laplacian of Levin et al. [9] who have shown how to express a grayscale matte as a locally affine combination of the input RGB channels. They describe a least-squares penalty function that can be minimized with a standard linear system represented by a matrix MI that only depends on the input image I (We refer to the original article for the detailed derivation. Note that given an input image I with N pixels, MI is N×N). We name Vc[O] the vectorized version (N × 1) of the output image O in channel c and define the following regularization term that penalizes outputs that are not well explained by a locally affine transform:
Lm=∑c=13Vc[O]TMIVc[O](2)View Source\begin{equation*}
\mathcal{L}_{m}=\sum\limits_{c=1}^{3}V_{c}[O]^{T}\mathcal{M}_{I}V_{c}[O]
\tag{2}
\end{equation*} Using this term in a gradient-based solver requires us to compute its derivative w.r.t. the output image. Since MI is a symmetric matrix, we have: dLmdVc[O]=2MIVc[O]. Augmented Style Loss with Semantic Segmentation: A limitation of the style term (Eq. 1c) is that the Gram matrix is computed over the entire image. Since a Gram matrix determines its constituent vectors up to an isometry [18], it implicitly encodes the exact distribution of neural responses, which limits its ability to adapt to variations of semantic context and can cause “spillovers”. We address this problem with an approach akin to Neural Doodle [1] and a semantic segmentation method [3] to generate image segmentation masks for the input and reference images for a set of common labels (sky, buildings, water, etc.). We add the masks to the input image as additional channels and augment the neural style algorithm by concatenating the segmentation channels and updating the style loss as follows:
Lps+=∑c=1c12N2ℓ,c∑ij(Gℓ,c[O]−Gℓ,c[S])2xjFℓ,c[O]=Fℓ[O]Mℓ,c[I]Fℓ,c[S]=Fℓ[S]Mℓ,c[S](3a)(3b)View Source\begin{align*}
&\qquad \mathcal{L}_{s+}^{p}=\sum_{c=1}^{c}\frac{1}{2N_{\ell,c}^{2}}\sum_{ij}(G_{\ell,c}[O]-G_{\ell,c}[S])_{xj}^{2}\tag{3a}\\
&F_{\ell,c}[O]=F_{\ell}[O]M_{\ell,c}[I]\quad F_{\ell,c}[S]=F_{\ell}[S]M_{\ell,c}[S]\tag{3b}
\end{align*}
where C is the number of channels in the semantic segmentation mask, Mℓ,c[⋅] denotes the channel c of the segmentation mask in layer ℓ. and Gℓ,c[⋅] is the Gram matrix corresponding to Fℓ,c[⋅]. We downsample the masks to match the feature map spatial size at each layer of the convolutional neural network. To avoid “orphan semantic labels” that are only present in the input image, we constrain the input semantic labels to be chosen among the labels of the reference style image. While this may cause erroneous labels from a semantic standpoint, the selected labels are in general equivalent in our context, e.g., “lake” and “sea”. We have also observed that the segmentation does not need to be pixel accurate since eventually the output is constrained by our regularization. Our Approach: We formulate the photorealistic style transfer objective by combining all 3 components together:
Ltotal=∑l=1LαℓLpc+Γ∑ℓ=1LβℓLℓs++λLm(4)View Source\begin{equation*}
\mathcal{L}_{\text{total}}=\sum\limits_{l=1}^{L}\alpha_{\ell}\mathcal{L}_{c}^{p}+\Gamma\sum\limits_{\ell=1}^{L}\beta_{\ell}\mathcal{L}_{s+}^{\ell}+\lambda \mathcal{L}_{m}
\tag{4}
\end{equation*}
where L is the total number of convolutional layers and ℓ indicates the ℓ-th convolutional layer of the deep neural network. Γ is a weight that controls the style loss. αℓ and βℓ are the weights to configure layer preferences. λ is a weight that controls the photorealism regularization. Lℓc is the content loss (Eq. 1b). Lℓs+ is the augmented style loss (Eq. 3a). Lm is the photorealism regularization (Eq. 2). 

SECTION 3. Implementation Details: This section describes the implementation details of our approach. We employed the pre-trained VGG-19 [16] as the feature extractor. We chose conv4_2 (αℓ=1 for this layer and αℓ=0 for all other layers) as the content representation, and conv1_1, conv2_1, conv3_1, conv4_1 and conv5_1 (βℓ=1/5 for those layers and βℓ=0 for all other layers) as the style representation. We used these layer preferences and parameters Γ=102,λ=104 for all the results. The effect of λ is illustrated in Figure 3. We use the original author's Matlab implementation of Levin et al. [9] to compute the Matting Laplacian matrices and modified the publicly available torch implementation [7] of the Neural Style algorithm. The derivative of the photorealism regularization term is implemented in CUDA for gradient-based optimization.
Figure 3: Transferring the dramatic appearance of the reference style image ((a)-inset), onto an ordinary flat shot in (a) Is challenging. We produce results using our method with different λ parameters. A too small λ value cannot prevent distortions, and thus the results have a non-photorealistic look in (b,c). Conversely, a too large λ value suppresses the style to be transferred yielding a half-transferred look in (e,f). We found the best parameter λ=104 to be the sweet spot to produce our result (d) And all the other results in this paper. 
We initialize our optimization using the output of the Neural Style algorithm (Eq. 1a) with the augmented style loss (Eq. 3a), which itself is initialized with a random noise. This two-stage optimization works better than solving for Equation 4 directly, as it prevents the suppression of proper local color transfer due to the strong photorealism regularization. We use DilatedNet [3] for segmenting both the input image and reference style image. As is, this technique recognizes 150 categories. We found that this fine-grain classification was unnecessary and a source of instability in our algorithm. We merged similar classes such as ‘lake’, ‘river’, ‘ocean’, and ‘water’ that are equivalent in our context to get a reduced set of classes that yields cleaner and simpler segmentations, and eventually better outputs. The merged labels are detailed in the supplemental material. Our code is available at: https://github.com/luanfujun/deep-photo-styletransfer. 

SECTION 4. Results and Comparison: We have performed a series of experiments to validate our approach. We first discuss visual comparisons with previous work before reporting the results of two user studies. We compare our method with Gatys et al. [5] (Neural Style for short) and Li et al. [10] (CNNMRF for short) across a series of indoor and outdoor scenes in Figure 4. Both techniques produce results with painting-like distortions, which are undesirable in the context of photographic style transfer. The Neural Style algorithm also suffers from spillovers in several cases, e.g., with the sky taking on the style of the ground. And as previously discussed, CNNMRF often generates partial style transfers that ignore significant portions of the style image. In comparison, our photorealism regularization and semantic segmentation prevent these artifacts from happening and our results look visually more satisfying. In Figure 5, we compare our method with global style transfer methods that do not distort images, Reinhard et al. [12] and Pitié et al. [11]. Both techniques apply a global color mapping to match the color statistics between the input image and the style image, which limits the faithfulness of their results when the transfer requires spatially-varying color transformation. Our transfer is local and capable of handling context-sensitive color changes. In Figure 6, we compare our method with the time-of-day hallucination of Shih et al. [15]. The two results look drastically different because our algorithm directly reproduces the style of the reference style image whereas Shih's is an analogy-based technique that transfers the color change observed in a time-lapse video. Both results are visually satisfying and we believe that which one is most useful depends on the application. From a technical perspective, our approach is more practical because it requires only a single style photo in addition to the input picture whereas Shih's hallucination needs a full time-lapse video, which is a less common medium and requires more storage. Further, our algorithm can handle other scenarios beside time-of-day hallucination. In Figure 7, we show how users can control the transfer results simply by providing the semantic masks. This use case enables artistic applications and also makes it possible to handle extreme cases for which semantic labeling cannot help, e.g., to match a transparent perfume bottle to a fireball. In Figure 8, we show examples of failure due to extreme mismatch. These can be fixed using manual segmentation. We provide additional results such as comparison against Wu et al. [19], results with only semantic segmentation or photorealism regularization applied separately, and a solution for handling noisy or high-resolution input in the supplemental material. All our results were generated using a two-stage optimization in 3∼5 minutes on an NVIDIA Titan X GPU. User Studies: We conducted two user studies to validate our work. First, we assessed the photorealism of several techniques: ours, the histogram transfer of Pitié et al. [11], CNNMRF [10], and Neural Style [5]. We asked users to score images on a 1-to-4 scale ranging from “definitely not photorealistic” to “definitely photorealistic”. We used 8 different scenes for each of the 4 methods for a total of 32 questions. We collected 40 responses per question on average. Figure 9a shows that CNNMRF and Neural Style produce nonphotorealistic results, which confirms our observation that these techniques introduce painting-like distortions. It also shows that, although our approach scores below histogram transfer, it nonetheless produces photorealistic outputs. Motivated by this result, we conducted a second study to estimate the faithfulness of the style transfer techniques. We found that global methods consistently generated distortion-free results but with a variable level of style faithfulness. We compared against several global methods in our second study: Reinhard's statistics transfer [12], Pitié's histogram transfer [11], and Photoshop Match Color. Users were shown a style image and 4 transferred outputs, the 3 previously mentioned global methods and our technique (randomly ordered to avoid bias), and asked to choose the image with the most similar style to the reference style image. We, on purpose, did not show the input image so that users could focus on the output images. We showed 20 comparisons and collected 35 responses per question on average. The study shows that our algorithm produces the most faithful style transfer results more than 80% of the time (Fig. 9b). We provide the links to our user study websites in the supplemental material.
Figure 4: Comparison of our method against neural style and CNNMRF. Both neural style and CNNMRF produce strong distortions in their synthesized images. Neural style also entirely ignores the semantic context for style transfer. CNNMRF tends to ignore most of the texture in the reference style image since it uses nearest neighbor search. Our approach is free of distortions and matches texture semantically. 
Figure 5: Comparison of our method against Reinhard et al. [12] and Pitié [11]. Our method provides more flexibility in transferring spatially-variant color changes, yielding better results than previous techniques. 
Figure 6: Our method and the techique of Shih et al. [15] generate visually satisfying results. However, our algorithm requires a single style image instead of a full time-lapse video, and it can handle other scenarios in addition to time-of-day hallucination. 
Figure 7: Manual segmentation enables diverse tasks such as transferring a fireball (b) To a perfume bottle (a) To produce a fire-illuminated look (c), or switching the texture between different apples (d, e). 
Figure 8: Failure cases due to extreme mismatch. 
Figure 9: User study results confirming that our algorithm produces photorealistic and faithful results. 


SECTION 5. Conclusions: We introduce a deep-learning approach that faithfully transfers style from a reference image for a wide variety of image content. We use the Matting Laplacian to constrain the transformation from the input to the output to be locally affine in colorspace. Semantic segmentation further drives more meaningful style transfer yielding satisfying photorealistic results in a broad variety of scenarios, including transfer of the time of day, weather, season, and artistic edits. 
ACKNOWLEDGMENTS: We thank Leon Gatys, Frédo Durand, Aaron Hertzmann as well as the anonymous reviewers for their valuable discussions. We thank Fuzhang Wu for generating results using [19]. This research is supported by a Google Faculty Research Award, and NSF awards IIS 1617861 and 1513967.